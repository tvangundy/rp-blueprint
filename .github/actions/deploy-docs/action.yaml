name: 'Deploy Docs Branch'
description: 'Deploys the docs branch to the docs site'
inputs:
  docs:
    description: 'Docs Branch: [latest, docs-x.y.z]'
    required: false
    default: 'latest'
  repo_owner:
    description: 'Repository Owner'
    required: true
  repo_name:
    description: 'Repository Name'
    required: true
  token:
    description: 'GitHub Token'
    required: true

runs:
  using: 'composite'
  steps:

    - name: Validate docs input
      shell: bash
      run: |
        docs_input="${{ inputs.docs }}"
        if [[ ! $docs_input =~ ^(latest|docs-[0-9]+\.[0-9]+\.[0-9]+|v?[0-9]+\.[0-9]+\.[0-9]+|[0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
          echo "Invalid docs input. Please provide 'latest' or a version in the format 'docs-x.y.z', 'v0.1.0', or '0.1.0'."
          exit 1
        fi

    - name: Determine Current Docs Branch
      id: determine_docs
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.token }}
        script: |
          const docsInput = '${{ inputs.docs }}';
          let currentDocs;

          if (docsInput === 'latest') {
            const branches = await github.rest.repos.listBranches({
              owner: '${{ inputs.repo_owner }}',
              repo: '${{ inputs.repo_name }}',
            });

            const docsBranches = branches.data
              .map(branch => branch.name)
              .filter(name => name.startsWith('docs-'))
              .sort((a, b) => a.localeCompare(b, undefined, { numeric: true }));

            currentDocs = docsBranches.pop() || '${{ inputs.src_branch }}';
          } else {
            currentDocs = docsInput.startsWith('docs-') ? docsInput : `docs-${docsInput.replace(/^v/, '')}`;
          }

          core.setOutput('current_docs', currentDocs);

    - name: Deploy Docs Branch
      shell: bash
      run: |
        echo "Deploying docs branch: ${{ steps.determine_docs.outputs.current_docs }}"
