name: 'Create Release Branch'
description: 'Creates a release branch from a specified source branch'
inputs:
  src_branch:
    description: 'Source Branch: [main, release-x.y.z]'
    required: false
    default: 'main'
  release:
    description: 'Release Branch: [latest, release-x.y.z]'
    required: false
    default: 'latest'
  repo_owner:
    description: 'Repository Owner'
    required: true
  repo_name:
    description: 'Repository Name'
    required: true
  token:
    description: 'GitHub Token'
    required: true

runs:
  using: 'composite'
  steps:

    - name: Validate release input
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.token }}
        script: |
          const releaseInput = '${{ inputs.release }}';
          const validFormat = /^(latest|release-[0-9]+\.[0-9]+\.[0-9]+|v?[0-9]+\.[0-9]+\.[0-9]+|[0-9]+\.[0-9]+\.[0-9]+)$/;

          if (!validFormat.test(releaseInput)) {
            throw new Error("Invalid release input. Please provide 'latest' or a version in the format 'release-x.y.z', 'v0.1.0', or '0.1.0'.");
          }
          console.log("Release input is valid.");

    - name: Determine Current Release Branch
      id: determine_release
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.token }}
        script: |
          const releaseInput = '${{ inputs.release }}';
          let currentRelease;

          if (releaseInput === 'latest') {
            const branches = await github.rest.repos.listBranches({
              owner: '${{ inputs.repo_owner }}',
              repo: '${{ inputs.repo_name }}',
            });

            const releaseBranches = branches.data
              .map(branch => branch.name)
              .filter(name => name.startsWith('release-'))
              .sort((a, b) => a.localeCompare(b, undefined, { numeric: true }));

            currentRelease = releaseBranches.pop() || '${{ inputs.src_branch }}';
          } else {
            currentRelease = releaseInput.startsWith('release-') ? releaseInput : `release-${releaseInput.replace(/^v/, '')}`;
          }

          core.setOutput('current_release', currentRelease);

    - name: Create or Update Release Branch
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.token }}
        script: |
          const currentRelease = '${{ steps.determine_release.outputs.current_release }}';
          const { data: branches } = await github.rest.repos.listBranches({
            owner: '${{ inputs.repo_owner }}',
            repo: '${{ inputs.repo_name }}',
          });

          const branchExists = branches.some(branch => branch.name === currentRelease);

          if (branchExists) {
            console.log(`Branch ${currentRelease} already exists.`);
          } else {
            const { data: srcBranch } = await github.rest.repos.getBranch({
              owner: '${{ inputs.repo_owner }}',
              repo: '${{ inputs.repo_name }}',
              branch: '${{ inputs.src_branch }}',
            });

            await github.rest.git.createRef({
              owner: '${{ inputs.repo_owner }}',
              repo: '${{ inputs.repo_name }}',
              ref: `refs/heads/${currentRelease}`,
              sha: srcBranch.commit.sha,
            });

            console.log(`Branch ${currentRelease} created.`);
          }
